{"version":3,"sources":["redux/calendar/calendarTypes.ts","redux/calendar/calendarReducer.ts","redux/filter/filterTypes.ts","redux/filter/filterReducer.ts","components/ListItem/EventItem.tsx","redux/selector.ts","components/List/EventList.tsx","components/List/ListComponent.tsx","components/CreateEvent/EventCard.tsx","components/CreateEvent/CreateEvent.tsx","components/Filter/Filter.tsx","redux/filter/filterActions.ts","components/Title/Title.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["actionCreator","actionCreatorFactory","addEventAction","initialState","events","name","date","moment","startTime","endTime","location","username","id","musicEvents","calendarReducer","reducerWithInitialState","case","state","payload","Object","objectSpread","concat","toConsumableArray","LATEST","DATE","latestAction","dateAction","filterReducer","display","latest","filterObject","filterOption","filterDate","useStyles","makeStyles","theme","createStyles","root","width","paddingLeft","backgroundColor","text","EventItem","_ref","notes","index","style","_React$useState","React","useState","_React$useState2","slicedToArray","checked","setChecked","classes","react_default","a","createElement","Fragment","ListItem","key","className","ListItemIcon","Checkbox","edge","onChange","color","inputProps","aria-labelledby","ListItemText","primary","Typography","variant","secondary","gutterBottom","Divider","component","getDisplayEvents","createSelector","calendar","filter","visibleEvents","sort","b","min","event","EventList","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","customEvents","map","e","ListItem_EventItem","format","Component","connect","maxWidth","textAlign","height","fontSize","marginLeft","ListComponent","List","List_EventList","EventCard","_this","selectedDate","add","addHandler","bind","assertThisInitialized","dateChangeHandler","startTimeChangeHandler","endTimeChangeHandler","compareTo","currentEvent","alert","onAddEvent","close","target","setState","value","parseInt","slice","_this2","Card","CardContent","title","TextField","label","placeholder","textField","margin","required","fullWidth","type","defaultValue","time","InputLabelProps","shrink","step","multiline","CardActions","Button","button","onClick","withStyles","padding","spacing","marginRight","container","flexWrap","marginTop","dispatch","flexGrow","input","typography","CreateEvent","newPlacement","undefined","placement","setPlacement","_React$useState3","_React$useState4","anchorEl","setAnchorEl","_React$useState5","_React$useState6","open","setOpen","handleClose","Popper","transition","TransitionProps","Fade","assign","timeout","CreateEvent_EventCard","Grid","justify","item","aria-describedby","currentTarget","FilterPanel","chipClicked","handleChipClick","handleRadioChange","handleDateChange","handleSubmit","sortByLatest","filterByDate","obj","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","heading","ExpansionPanelDetails","xs","Chip","chip","FormControl","formControl","FormLabel","RadioGroup","aria-label","group","FormControlLabel","control","Radio","pxToRem","fontWeight","fontWeightRegular","paddingBottom","marginBottom","Title","list","App","Filter","components_CreateEvent_CreateEvent","Boolean","window","hostname","match","rootReducer","combineReducers","store","createStore","navigator","serviceWorker","ready","then","registration","unregister","ReactDOM","render","react","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f173db4d.chunk.js","sourcesContent":["import moment from 'moment';\nimport actionCreatorFactory from 'typescript-fsa';\n\nexport interface Event {\n    name: string,\n    date: moment.Moment,\n    startTime: moment.Moment,\n    endTime: moment.Moment,\n    location?: string,\n    notes?: string,\n    username: string,   //not alterable\n    id: string\n};\n\nexport interface CalendarState {\n    events: Event[],\n    musicEvents: Event[]\n}\n\nexport const ADD_EVENT = 'ADD_EVENT';\nexport const ADD_MUSIC_EVENTS = 'ADD_MUSIC_EVENTS';\n\nconst actionCreator = actionCreatorFactory();\nexport const addEventAction = actionCreator<Event>(ADD_EVENT);\nexport const addMusicEventsAction = \n    actionCreator<Event[]>(ADD_MUSIC_EVENTS);\n/*\nexport interface addEventAction {\n    type: typeof ADD_EVENT,\n    payload: Event\n}\n*/","import {\n    CalendarState,\n    Event,\n    addEventAction, \n} from './calendarTypes';\nimport moment from 'moment';\nimport {reducerWithInitialState} from 'typescript-fsa-reducers';\n\nconst initialState : CalendarState = {\n    events: [\n        {\n            name: \"Go to the gym 4\", \n            date: moment(\"2016-02-07\"), \n            startTime:moment(), \n            endTime: moment(), \n            location: \"gym\", \n            username: \"Rebecca\", \n            id: \"Rebecca-2019/6/11-Go the gym\" \n        },\n        {\n            name: \"Go to the gym 2\", \n            date: moment(\"2019-3-20\"), \n            startTime:moment(), \n            endTime: moment(), \n            location: \"gym\", \n            username: \"Rebecca\", \n            id: \"Rebecca-2019/6/11-Go the gym\" \n        },\n        {\n            name: \"Go to the gym 3\", \n            date: moment(\"2018-12-25\"), \n            startTime:moment(), \n            endTime: moment(), \n            location: \"gym\", \n            username: \"Rebecca\", \n            id: \"Rebecca-2019/6/11-Go the gym\" \n        },\n        {\n            name: \"Go to the gym 1\", \n            date: moment(\"2019-3-25\"), \n            startTime:moment(), \n            endTime: moment(), \n            location: \"gym\", \n            username: \"Rebecca\", \n            id: \"Rebecca-2019/6/11-Go the gym\" \n        },\n    ],\n    musicEvents: [],\n};\n\nexport const calendarReducer = reducerWithInitialState(initialState)\n    .case(addEventAction, (state, payload) => ({\n        ...state,\n        events: [...state.events, payload],\n    }));","import moment from 'moment';\nimport actionCreatorFactory from 'typescript-fsa';\n\nexport interface FilterObject {\n    filterOption: string,\n    filterDate: moment.Moment,\n}\n\nexport interface FilterState {\n    display: string,\n    latest?:boolean,\n    filterObject?: FilterObject | null\n}\n\nexport const LATEST = 'LATEST';\nexport const DATE = 'DATE';\n\nconst actionCreator = actionCreatorFactory();\nexport const latestAction = actionCreator<{}>(LATEST);\nexport const dateAction = actionCreator<FilterObject>(DATE);\n","import {FilterState, latestAction, dateAction} from './filterTypes'\nimport {reducerWithInitialState} from 'typescript-fsa-reducers';\n\nconst initialState: FilterState = {\n    display: 'SHOW_ALL',\n    latest: false,\n    filterObject: null\n};\n\nexport const filterReducer = reducerWithInitialState(initialState)\n    .case(latestAction, (state) => ({\n            ...state,\n            latest: true\n        }\n    )) \n    .case(dateAction, (state, payload) => ({\n            ...state,\n            filterObject: {\n                filterOption: payload.filterOption,\n                filterDate: payload.filterDate\n            }\n        }\n    ))\n","import React, {useState} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport {Theme} from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider'\nimport moment from 'moment'\n\ninterface EventItemProps {\n    name: string,\n    date: string,\n    startTime: string,\n    endTime: string,\n    location?: string,\n    notes?: string,\n    username: string,\n    id: string,\n    index?: number,\n    style?: object\n};\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        width: '100%',\n        paddingLeft: '15%',\n        backgroundColor: '#e8eff2'\n      },\n    text: {\n        paddingLeft: '15%'\n    }\n}));\n\nconst EventItem = ({\n    name, date, startTime, endTime, location, notes, username, id, index, style\n} :EventItemProps) => {\n    const [checked, setChecked] = React.useState(-1);\n\n    const handleCheck = () => {\n        setChecked((checked === -1) ? 0 : -1);\n    }\n\n    const classes=useStyles();\n\n    return (\n        <React.Fragment>\n            <ListItem style={style} key={index} className={classes.root}>\n                <ListItemIcon>\n                <Checkbox\n                    edge=\"start\"\n                    onChange={handleCheck}\n                    checked={checked !== -1}\n                    color=\"primary\"\n                    inputProps={{ 'aria-labelledby': id }}\n                />\n                </ListItemIcon>\n                <ListItemText \n                    id={id} \n                    className={classes.text}\n                    primary={\n                        <React.Fragment>\n                            <Typography variant=\"h6\">\n                                {name}\n                            </Typography>\n                        </React.Fragment>\n                    }\n                    secondary={\n                        <React.Fragment>\n                            <Typography variant=\"subtitle2\" gutterBottom>\n                                User: {username}\n                            </Typography>\n                            <Typography\n                                variant=\"body1\">\n                                Date: {date}\n                            </Typography>\n                            <Typography\n                                variant=\"body1\">\n                                Starts at: {startTime} Ends at: {endTime}\n                            </Typography>\n                            {location ? \n                                <Typography\n                                    variant=\"body1\">\n                                    Location: {location}\n                                </Typography>\n                            : null}\n                            {notes ? \n                                <Typography\n                                    variant=\"body1\">\n                                    Notes: {notes}\n                                </Typography>\n                            : null}\n                        </React.Fragment>\n                    } />\n                \n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n        </React.Fragment>\n\n    )\n};\n\nexport default EventItem;","import {createSelector} from 'reselect';\nimport {Event} from './calendar/calendarTypes';\nimport { RootState } from '..';\nimport moment from 'moment';\n\nconst getEvents = (state: RootState) => state.calendar.events;\nconst getMusic = (state: RootState) => state.calendar.musicEvents;\nconst getFilter = (state : RootState) => state.filter;\n\nexport const getMusicEvents = createSelector(\n    [getMusic],\n    (events)\n    :Event[] => {\n        return events;\n    }\n)\n\nexport const getDisplayEvents = createSelector(\n    [getEvents, getFilter],\n    (events, filter)\n    : Event[] => {\n        let visibleEvents;\n        switch (filter.display) {\n            case 'SHOW_ALL':\n                visibleEvents = [...events];\n            default:\n                visibleEvents = [...events];\n        }\n        if (filter.latest) {\n            visibleEvents.sort((a, b) => {\n                if (moment.min(a.date, b.date) === a.date) {\n                    return 1\n                } else {\n                    return -1\n                }\n            })  \n        }\n        \n        if (filter.filterObject) {\n            if (filter.filterObject.filterOption === 'before') {\n                visibleEvents = visibleEvents.filter((event) => {\n                    return moment.min(event.date,filter.filterObject!.filterDate) === event.date\n                })\n            } else if (filter.filterObject.filterOption === 'after') {\n                visibleEvents = visibleEvents.filter((event) => {\n                    return moment.min(event.date,filter.filterObject!.filterDate) === filter.filterObject!.filterDate\n                })\n            }\n        }\n        return visibleEvents;\n    }\n)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport EventItem from '../ListItem/EventItem'\nimport {Event} from '../../redux/calendar/calendarTypes'\nimport { getDisplayEvents } from '../../redux/selector';\nimport { RootState } from '../..';\n\ninterface ListProps {\n    events: Event[],\n};\n  \nclass EventList extends Component<ListProps> {\n\n    constructor(props : ListProps) {\n        super(props);\n    }\n\n    render() {\n\n        const customEvents = this.props.events.map((e : Event) => (\n            <EventItem\n                id={e.name}\n                name = {e.name}\n                date={e.date.format('MM-DD-YYYY')}\n                startTime={e.startTime.format('hh:mm A')}\n                endTime={e.endTime.format('hh:mm A')}\n                location={e.location}\n                notes={e.notes}\n                username={e.username}\n            />\n        ));\n\n        const allEvents = [...customEvents];\n        return allEvents;\n    }\n};\n\nconst mapStateToProps = (state : RootState)  => {\n    return {\n        events: getDisplayEvents(state),\n    }\n};\n\n\n\nexport default connect(mapStateToProps)(EventList);","import React from 'react';\nimport {Theme} from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport EventList from './EventList'\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n      maxWidth: '80%',\n      textAlign: 'center',\n      height: 800,\n      fontSize: 20,\n      marginLeft: '10%'\n    }\n  }));\n\nexport default function ListComponent() {\n    const classes = useStyles();\n\n    return (\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                className={classes.root}\n                >\n                \n                <EventList/>\n            </List>\n    )\n\n    \n}\n\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {CalendarState, ADD_EVENT, Event, addEventAction} from '../../redux/calendar/calendarTypes';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport {Theme} from '@material-ui/core'\n\nimport moment from 'moment';\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        padding: theme.spacing(3),\n        maxWidth: 500\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    button: {\n        margin: '0 auto',\n        textAlign: 'center'\n      },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    time: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    title: {\n        margin: '0 auto',\n        textAlign: 'center'\n    }\n  });\n\ninterface EventCardProps {\n    close: any,\n    classes: any,\n    onAddEvent: (currentEvent: Event) => void\n};\n\ninterface EventCardState {\n    name: string,\n    username: string,\n    selectedDate: string,\n    startTime: string,\n    endTime: string,\n    location?: string,\n    notes?: string\n}\n\nclass EventCard extends React.Component<EventCardProps, EventCardState>{\n    \n    constructor(props : any) {\n        super(props);\n        this.state = {\n            name: '',\n            username: '',\n            selectedDate: moment().format(\"YYYY-MM-DD\"),\n            startTime: moment().format(\"HH:mm\"),\n            endTime: moment().add(1, \"h\").format(\"HH:mm\"),\n            location: '',\n            notes: '',\n            };\n        this.addHandler = this.addHandler.bind(this);\n        this.dateChangeHandler = this.dateChangeHandler.bind(this);\n        this.startTimeChangeHandler = this.startTimeChangeHandler.bind(this);\n        this.endTimeChangeHandler = this.endTimeChangeHandler.bind(this);\n        this.compareTo = this.compareTo.bind(this);\n    };\n\n    addHandler() {\n        let currentEvent : Event = {\n            name: this.state.name,\n            username: this.state.username,\n            date: moment(this.state.selectedDate, 'YYYY-MM-DD'), //needs to be fixed\n            startTime: moment(this.state.startTime, 'HH:mm'),\n            endTime: moment(this.state.endTime, 'HH:mm'),\n            location: this.state.location,\n            notes: this.state.notes,\n            id: this.state.username + ' ' + this.state.selectedDate + this.state.name\n        };\n\n        if (!currentEvent.name) {\n            alert(\"Event title is required.\")\n        } else if (!currentEvent.username) {\n            alert('Username is required.')\n        } else if (!currentEvent.date) {\n            alert('Date is required.')\n        } else if (!currentEvent.startTime) {\n            alert('Event start time is required.')\n        } else if (!currentEvent.endTime) {\n            alert('Event end time is required.')\n        } else if (this.compareTo(this.state.startTime,this.state.endTime) === false ) {\n            alert('Event end time has to be later than start time.')\n        } else {\n            this.props.onAddEvent(currentEvent);\n            this.props.close();\n        } \n    }\n\n    dateChangeHandler(e : React.ChangeEvent<HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement>) {\n        if (e.target)\n            this.setState({selectedDate: e.target.value});\n    }\n\n    startTimeChangeHandler(e : React.ChangeEvent<HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement>) {\n        if (e.target) {\n            this.setState({startTime: e.target.value});\n        }\n    }\n\n    endTimeChangeHandler(e : React.ChangeEvent<HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement>) {\n        if (e.target) {\n            this.setState({endTime: e.target.value});\n        }\n    }\n\n    compareTo(startTime: string, endTime:string) {\n        const start = parseInt(startTime.slice(0, 2) + startTime.slice(3, 5), 10);\n        const end = parseInt(endTime.slice(0, 2) + startTime.slice(3, 5), 10);\n        return start < end;\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <Card className={this.props.classes.root}>\n                <CardContent>\n                    <div className={this.props.classes.title}>\n                    <TextField\n                        id=\"outlined-with-placeholder\"\n                        label=\"New Event\"\n                        placeholder=\"New Event\"\n                        className={this.props.classes.textField}\n                        onChange={e => this.setState({name: e.target.value})}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        required\n                    />\n                    </div>\n                    <TextField\n                        id=\"outlined-textarea\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        className={this.props.classes.textField}\n                        onChange={e => this.setState({username: e.target.value})}\n                        margin=\"normal\"\n                        fullWidth\n                        required\n                    />\n\n                    <TextField\n                            id=\"date\"\n                            label=\"Date\"\n                            type=\"date\"\n                            defaultValue={moment().format(\"YYYY-MM-DD\")}\n                            className={classes.time}\n                            onChange={(e) => this.dateChangeHandler(e)}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                        />\n                    <TextField\n                        id=\"time\"\n                        label=\"Start Time\"\n                        type=\"time\"\n                        defaultValue={moment().format(\"HH:mm\")}\n                        className={classes.time}\n                        onChange={(e) => this.startTimeChangeHandler(e)}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        inputProps={{\n                        step: 300, // 5 min\n                        }}\n                    />\n\n                    <TextField\n                        id=\"time\"\n                        label=\"End Time\"\n                        type=\"time\"\n                        defaultValue={moment().add(1, \"h\").format(\"HH:mm\")}\n                        className={classes.time}\n                        onChange={(e) => this.endTimeChangeHandler(e)}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        inputProps={{\n                        step: 300, // 5 min\n                        }}\n                    />\n    \n                    <TextField\n                        id=\"outlined-textarea\"\n                        label=\"Location\"\n                        placeholder=\"Location\"\n                        className={this.props.classes.textField}\n                        onChange={e => this.setState({location: e.target.value})}\n                        margin=\"normal\"\n                        fullWidth\n                    />\n                    <TextField\n                        id=\"outlined-textarea\"\n                        label=\"Notes\"\n                        placeholder=\"Notes\"\n                        multiline\n                        className={this.props.classes.textField}\n                        onChange={e => this.setState({notes: e.target.value})}\n                        margin=\"normal\"\n                        fullWidth\n                    />\n                </CardContent>\n                <CardActions>\n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className={this.props.classes.button}\n                        onClick={this.addHandler}>\n                        Add Event\n                    </Button>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = (state : CalendarState) => ({\n    e: state.events\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        onAddEvent: (currentEvent : Event) => dispatch({type: ADD_EVENT, payload: currentEvent}),\n    }\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(EventCard));","import React, {MouseEvent} from 'react';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport {Theme} from '@material-ui/core'\nimport Popper, { PopperProps, PopperPlacementType } from '@material-ui/core/Popper'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade'\nimport Paper from '@material-ui/core/Paper';\nimport EventCard from './EventCard';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1,\n        marginRight: theme.spacing(20),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    input: {\n      display: 'none',\n    },\n    typography: {\n        padding: theme.spacing(2),\n      }\n  }));\n\nconst CreateEvent = () => {\n\n        const classes = useStyles();\n       \n        const [placement, setPlacement] = React.useState<PopperPlacementType|undefined>(undefined);\n        const [anchorEl, setAnchorEl] = React.useState<Element|null>(null);\n        const [open, setOpen] = React.useState<boolean>(false);\n\n        const handleClick = (newPlacement : PopperPlacementType) =>  (event : MouseEvent) => {\n            const {currentTarget} = event;\n            setAnchorEl(currentTarget);\n            setOpen(placement !== newPlacement || !open);\n            setPlacement(newPlacement);\n        }\n\n        const handleClose = (event : MouseEvent) => {\n            setAnchorEl(null);\n            setOpen(false);\n        }\n\n        const id = open ? 'simple-popper' : undefined;\n\n        return (\n            <div className={classes.root}>\n                <Popper \n                    open={open} \n                    anchorEl={anchorEl}\n                    placement={placement} \n                    transition>\n                    {({ TransitionProps }) => (\n                    <Fade {...TransitionProps} timeout={350}>\n                            <EventCard\n                                close={handleClose}/>\n                    </Fade>\n                    )}\n                </Popper>\n                <Grid container justify=\"center\">\n                    <Grid item>\n                        <Button \n                        aria-describedby={id}\n                        onClick={handleClick('bottom')}\n                        variant=\"contained\"\n                        color=\"primary\" \n                        className={classes.button}>\n                        Create New Event\n                        </Button>\n                    </Grid>\n                \n                </Grid>\n            </div>\n        )\n};\n\nexport default CreateEvent;","import React from 'react';\nimport {render} from 'react-dom';\nimport {connect} from 'react-redux';\nimport {withStyles, createStyles} from '@material-ui/core/styles';\nimport moment from 'moment';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {\n    Theme, \n    ExpansionPanel, \n    ExpansionPanelSummary, \n    ExpansionPanelDetails, \n    Typography,\n    Chip, \n    Button,\n    Grid,\n    FormControlLabel,\n    TextField,\n    RadioGroup,\n    FormLabel,\n    FormControl,\n    Radio\n} from '@material-ui/core'\nimport {sortByLatest,filterByDate} from '../../redux/filter/filterActions';\nimport { tsConditionalType } from '@babel/types';\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        width: '100%',\n        padding: theme.spacing(3,2),\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    chip: {\n     margin: theme.spacing(1),\n    },\n    time: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    latest: {\n        paddingBottom: theme.spacing(3),\n    },\n    formControl : {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(15)\n    }\n});\n\ninterface FilterPanelProps {\n    classes: any,\n    sortByLatest: typeof sortByLatest,\n    filterByDate: typeof filterByDate\n};\n\ninterface FilterPanelState {\n    anchorEl: Element | null,\n    chipClicked: boolean,\n    sort: boolean,\n    filter: {\n        filterOption: string | undefined,\n        filterDate: string,\n    }\n}\n\nclass FilterPanel extends React.Component <FilterPanelProps, FilterPanelState>{\n\n    constructor(props:any) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            chipClicked: false,\n            sort: false,\n            filter: {\n                filterOption: undefined,\n                filterDate: moment().format(\"YYYY-MM-DD\"),\n            }\n        }\n        this.handleChipClick = this.handleChipClick.bind(this);\n        this.handleRadioChange = this.handleRadioChange.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChipClick(event: React.MouseEvent) {\n        this.props.sortByLatest();\n    }\n\n    handleSubmit() {\n        if (!this.state.sort && !this.state.filter) {\n            alert('No filter has been applied.')\n        } else {\n            if (this.state.sort) {\n                this.props.sortByLatest();\n            }\n            if (this.state.filter.filterOption) {\n                const filter = {\n                    filterOption: this.state.filter.filterOption,\n                    filterDate: moment(this.state.filter.filterDate, 'YYYY-MM-DD')\n                }\n                this.props.filterByDate(filter)\n            }\n        }\n    }\n\n    handleRadioChange(e: React.ChangeEvent<{}>) {\n        const target = e.target as HTMLInputElement;\n        if (target) {\n            const obj = this.state.filter;\n            obj.filterOption = target.value;\n            this.setState({filter: obj});\n        }\n    }\n\n    handleDateChange(e : React.ChangeEvent<HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement>) {\n        const filter = this.state.filter;\n        filter.filterDate = e.target.value;\n        if (e.target !== null) {\n            this.setState({filter: filter});\n        }\n    };\n    \n    render() {\n\n        return (\n            <div className={this.props.classes.root}>\n                <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                    <Typography className={this.props.classes.heading}>Filter</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <form>\n                            <Grid item xs={6}>\n                                <Chip\n                                    label=\"LATEST\"\n                                    className={this.props.classes.chip}\n                                    onClick={this.handleChipClick}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\" className={this.props.classes.formControl}>\n                                    <FormLabel component=\"legend\">Filter By</FormLabel>\n                                    <RadioGroup\n                                        aria-label=\"filter\"\n                                        name=\"filter\"\n                                        className={this.props.classes.group}\n                                        value={this.state.filter.filterOption}\n                                        onChange={this.handleRadioChange}\n                                    >\n                                    <FormControlLabel value=\"before\" control={<Radio />} label=\"Before\" />\n                                    <FormControlLabel value=\"after\" control={<Radio />} label=\"After\" />\n                                    </RadioGroup>\n                                </FormControl>\n\n                                <TextField\n                                    id=\"date\"\n                                    label=\"Date\"\n                                    type=\"date\"\n                                    defaultValue={moment().format(\"YYYY-MM-DD\")}\n                                    onChange={(e) => this.handleDateChange(e)}\n                                    className={this.props.classes.time}\n                                    InputLabelProps={{\n                                    shrink: true,\n                                    }}\n                                />   \n                                   \n                            </Grid>\n                            <Button onClick={this.handleSubmit}>\n                                Apply Filter\n                            </Button>    \n                            \n                        </form>\n                    \n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        )\n    }\n    \n}\n\nexport default withStyles(styles)(connect(null, {sortByLatest, filterByDate})(FilterPanel));\n","import {FilterObject, LATEST, DATE} from './filterTypes';\n\nexport function sortByLatest() {\n    return {\n        type: LATEST\n    }\n}\n\nexport function filterByDate(filter : FilterObject) {\n    return {\n        type: DATE,\n        payload: filter\n    }\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport {makeStyles, createStyles} from '@material-ui/core/styles'\nimport {Theme} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme)=> createStyles({\n    title: {\n        marginTop: 20,\n        marginBottom: 20,\n        textAlign: 'center',\n    }\n}));\n\nexport default function Title () {\n\n    const classes = useStyles();\n\n  return (\n        <Typography variant=\"h5\" className={classes.title}>\n                        To-Do List\n        </Typography>\n    )\n};","import React from 'react';\nimport EventList from './components/List/EventList';\nimport ListComponent from './components/List/ListComponent';\nimport * as styles from './App.css';\nimport CreateEvent from './components/CreateEvent/CreateEvent';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport {Theme} from '@material-ui/core';\nimport {MuiPickersUtilsProvider,} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport Filter from './components/Filter/Filter'\nimport Title from './components/Title/Title'\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    flexGrow: 1,\n    marginTop: 20\n  },\n  list: {\n    //width: '90%'\n  }\n}));\n\n\nconst App: React.FC = () => {\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing = {3}>\n        <Grid item xs={9}>\n            <Title/>\n            <Filter/>\n            <ListComponent/>\n        </Grid>\n        <Grid item xs={3}>\n          <CreateEvent/>\n        </Grid>\n      </Grid>\n    </div>\n    \n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, combineReducers} from 'redux';\nimport {Provider} from 'react-redux';   //the compiler can't find react-redux\nimport {calendarReducer} from './redux/calendar/calendarReducer';\nimport {filterReducer} from './redux/filter/filterReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.d.ts'\n\n// require('dotenv').config();\n// console.log('-->', process.env.API_KEY);\n\nconst rootReducer = combineReducers({\n    calendar: calendarReducer,\n    filter: filterReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(rootReducer);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}